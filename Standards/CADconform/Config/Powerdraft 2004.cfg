#
# CADconform Administration Configuration File.
#
# NOTE: This is a standard MicroStation configuration file read in at the
#       application level. Variables can be copied from here into the User
#       or Project configuration file to override them at various workspace
#       levels. See the CADconform Administrator's Guide for more
#       information. Note also that commenting out a variable by preceding
#       it with a '#' symbol will require a restart of MicroStation to
#       purge it from memory.
#
# This file was last saved on Wednesday 03 August 2016, 16:31:02 by user ZENBOOK on machine 'PIERS-ZENBOOK'
#

#
# Defines the maximum size of the CADconform log file in kilobytes. Default is 1024KB.
#
CADCONFORM_LOG_FILE_MAXSIZE = 1024

#
# Defines the path to the CADconform licence file. This should only be used if CADconform is the only
# Altiva Software product installed, otherwise it should be redefined to a shared network drive for
# all Altiva products.
#
CM_LICENCES = $(CADCONFORM_SERVER_DIR)Licence/

#
# This variable defines a comma separated list of table names that can be selected by the user. Other
# feature tables not listed will be displayed to the user but disabled and therefore not selectable
# when choosing feature tables. This variable is primarily used for controlling feature table
# selection at the workspace level. For example, the administrator may wish to only allow a Civil
# feature table when the user is currently in a Civil workspace project. This variable only affects
# users who do not have editing privileges for feature tables. If this setting is left blank then no
# filtering of feature tables will occur, and all users can select from all available tables in the
# database.
#
_CADCONFORM_ALLOWED_TABLE_NAMES = ""

#
# This option determines whether the colour table is checked against a list of allowed colour tables.
# The options are:
#	0		: Means the colour table is checked
#	1		: Means the colour table is not checked.
#
_CADCONFORM_ALLOW_ANY_COLOURTABLE = 1

# 
# This option defines whether text size is allowed to be negative or not.
# Negative text size is not usually displayed in the Element Information dialog, however it is
# displayed in the "Analyze Element" dialog. Text with negative width is displayed mirrored
# horizontally, and text with negative height is displayed mirrored vertically. Text elements with
# negative size can be created manually by enabling the "Backward / Upside-down" toggles in the Text
# Styles dialog. Similar effects can be achieved using element rotation at placement time, making
# negative text size somewhat redundant.
# 
# More frequently, negative text size results from importing files from AutoCAD. Prior to CADconform
# v7.03.20, text size was allowed to be negative. In subsequent versions it is no longer allowed
# (e.g. "2.5mm" will not match "-2.5mm"), however if older files need to checked without invalidating
# existing watermarks, then this option should be enabled.
#  
_CADCONFORM_ALLOW_NEGATIVE_TEXTSIZE = 0

#
# Allows unknown cells if the components all conform. If this option is ON and an unknown cell does
# not conform, then each cell components will generate an error. If this option is OFF, then the
# unknown cell itself will always generate an error and the cell components are ignored.
#
_CADCONFORM_ALLOW_UNKNOWN_CONFORMING_CELLS = 0

#
# This keyin is activated when the Place Bilingual Text command is invoked. It can be used to ensure
# that the correct dimension settings and symbology are used.
#
_CADCONFORM_BILINGUAL_TEXT_INITIAL_KEYIN = "dimension terminator width 1.2;dimension terminator height 0.4;dimension terminator orienthead 2;"

#
# This is the keyin to execute prior to placing text for each language. These keyins can help
# differentiate between text in the first language and the second. Typically this will be done by
# changing the symbology (colour or level) or font effect (bold, underline, slant, etc).
#
_CADCONFORM_BILINGUAL_TEXT_KEYIN_1 = "slant=0.0;"

#
# This is the keyin to execute prior to placing text for each language. These keyins can help
# differentiate between text in the first language and the second. Typically this will be done by
# changing the symbology (colour or level) or font effect (bold, underline, slant, etc).
#
_CADCONFORM_BILINGUAL_TEXT_KEYIN_2 = "slant=20.0;"

#
# This is the name of the language to appear in the top of the bilingual text dialog.
#
_CADCONFORM_BILINGUAL_TEXT_LANGUAGE_1 = "French"

#
# This is the name of the language to appear at the bottom of the bilingual text dialog.
#
_CADCONFORM_BILINGUAL_TEXT_LANGUAGE_2 = "English"

#
# This points to the Excel spreadsheet template file used for Bilingual Text Translation.
#
_CADCONFORM_BILINGUAL_TEXT_TEMPLATE_FILE = $(_CADCONFORM_DOCS_DIR)Bilingual Template FR-EN.xls

#
# List of allowed reference border sheets that define our text scale, separated by semi-colons.
# Example: "eng_sheet.dgn";"A0 Border".
# Model names can also be specified in addition or as an alternative to the design file name, after a
# comma.
# For example: "eng_sheet.dgn";"Sheet A.dgn,Model D";",Model F".
# If you have a border sheet named "A0 Border" which could be a design file or merged in as a model,
# then you can define: "A0 Border.dgn;,A0 Border". This would allow either a model or a file named
# "A0 Border".
#
# Wildcards and regular expressions (up to Level 3 - see _CADCONFORM_WILDCARD_TYPE) are also 
# supported. For example, "A[0-1] Border" will match "A0 Border" or "A1 Border" but not "A2 Border".
#
_CADCONFORM_BORDERSHEETS = ""

#
# This option ensures that only the default model in a design file will be checked for valid border
# sheets. The default model is the initial model that cannot be deleted by the user.
#
_CADCONFORM_BORDERSHEETS_DEFAULT_MODEL = 0

#
# If enabled, this option means that any elements found outside the current plot border will be
# considered to be conformance errors by the Conform, Report and Certification tools. If the option
# to ignore elements outside the border is also enabled (_CADCONFORM_BORDERSHEETS_IGNORE_OUTSIDE=1),
# then only the Certification tool will report outside elements as a conformance error.
#
_CADCONFORM_BORDERSHEETS_DISALLOW_OUTSIDE = 0

#
# This option defines the scale factor for the border shape. The resulting area is then used to 
# determine which elements are considered outside the plot border shape. Setting this number to a
# value slightly greater than 1.0 is useful if the plot border is exactly coincident with other
# elements in the title-block such as border marks, grid lines, etc. If this variable has not been
# set, it will default to 1.001 (0.1% size increase). If there are no elements along or outside the
# plot border shape in your standard border sheet, then this value can be set to 1.0 to disable it.
#
_CADCONFORM_BORDERSHEETS_ERROR_SCALE = 1.001

#
# If enabled, this option means that only elements within the current plot border will be checked by
# the Conform and Reporting tools. However, during certification the entire file will be checked.
# This option is intended to allow users to draw temporarily outside the plot border prior to
# certification. Elements will still be allowed outside the plot border at certification as long as
# they conform, unless the option to disallow outside elements
# (_CADCONFORM_BORDERSHEETS_DISALLOW_OUTSIDE=1) is enabled.
#
_CADCONFORM_BORDERSHEETS_IGNORE_OUTSIDE = 0

#
# If enabled, this option means that the plot border must be found in a defined border sheet. If a
# plot border is not found in the border sheet, then a conformance error will be shown in both the
# Conform and Reporting tools.
#
_CADCONFORM_BORDERSHEETS_PLOTSHAPE_EXISTS = 0

#
# This string represents the allowed feature names used to define the plot border shape. This feature
# will usually be looked for in a defined border sheet and the first matching feature will be used to
# represent the geometric boundary of the plot border. The feature names are defined as the full
# name-path of the feature, with full-stops/periods '.' separating the table name and sub-groups of
# the feature. For example: 'Civil.Plot Border.Shape Boundary' represents a feature named 'Shape
# Boundary' in a group named 'Plot Border' within a feature table named 'Civil'. If a feature name
# includes a full-stop, then put two in a row to escape it, e.g. '2.5mm Border' becomes '2..5mm
# Border'. Multiple feature names can be defined if they are separated by a semi-colon ';'.
#
_CADCONFORM_BORDERSHEETS_PLOT_SHAPE = ""

#
# This option allows the user to automatically brand the current design file with the current feature
# table selection, via a toggle on the Feature Table Manager. If the toggle is ON, then the current
# design file will be branded, if it is OFF then it will not be branded. If the user does not have
# the branding privilege, then the toggle is disabled.
#
_CADCONFORM_BRANDING_AUTO = 1

#
# This option allows the user to automatically brand or rebrand all files certified during a Batch
# Report. If this option is enabled, then the files are branded regardless of whether they pass
# certification or already contain a different branding.
#
_CADCONFORM_BRANDING_CERTIFY = 0

#
# This option allows the user to disable the automatic loading of branded tables. If this option is on
# (set to "1") then branded design files will not automatically load the branded feature tables. If
# set to off ("0"), then branding will function normally.
#
_CADCONFORM_BRANDING_DISABLE_AUTOLOAD = 0

#
# This option allows the user to automatically override the branding contained in design files during
# a Batch Report. If this option is enabled, then the user can control this override via a toggle on
# the Batch Reporting dialog.
#
_CADCONFORM_BRANDING_OVERRIDE = 1

#
# This variable defines one or more table pairs that will be automatically rebranded when the file is
# opened. This is useful to automatically rebrand files where either the database or table name has
# changed since initial branding. The list of table pairs is semi-colon separated, with the legacy
# table on the left side, followed by a colon (:) and the new table name on the right. Both the
# legacy table and the new table name may be preceded by the database name with a period (.)
# separating the database and table name. If the database name is not supplied, then the logic will
# be applied to all database names.
# Example:
# _CADCONFORM_BRANDING_RENAME_TABLES = LegacyTableName1 : NewTableName1
#
_CADCONFORM_BRANDING_RENAME_TABLES = ""

#
# Allows cell library contents to be cached locally for faster access when conforming and reporting.
# This should normally be enabled unless there is a problem with the caching algorithm.
#
_CADCONFORM_CELL_CACHING = 1

#
# This option defines whether the design file or model integrity of reference files is checked when
# watermarking. If this option is enabled during certification, then any subsequent changes to the 
# reference files will result in invalidation of the watermark. The allowed values are:
#     0 : (OFF) References are not certified
#     1 : (ON) References are certified
#    -1 : (User definable) Allow the user to choose during the certification process.
#
# If set to "-1" (User Definable), then the "Check for Reference Changes" toggle in the "Advanced
# Options" dialog box of the Report Manager is used to determine the active status.
#
_CADCONFORM_CERTIFY_CHECK_REFERENCE_WATERMARKS = 0

#
# This option prevents the user from certifying a file if the active certification settings differ
# from the settings in an existing watermark. This option is useful for preventing new watermarks
# from invalidating existing watermarks in a drawing.
#
_CADCONFORM_CERTIFY_NO_DIFFERING_STGS = 1

#
# This option specifies an additional command to be executed after a file is successfully certified.
# (See also '_CADCONFORM_CERTIFY_PREWATERMARK_KEYIN')
# For example, the user may want to make a backup of the current design file by entering 'backup'.
#
_CADCONFORM_CERTIFY_POSTWATERMARK_KEYIN = ""

#
# This option specifies an additional command to be executed before a file is successfully certified.
# For example, the user may want to turn ON all levels in View 1 by entering 'on=all;selview 1'
#
_CADCONFORM_CERTIFY_PREWATERMARK_KEYIN = ""

#
# Always check 3D Objects, such as solids and surfaces. If this option is OFF, then 3D objects are
# never checked and will not be reported on or checked for conformance. 3D objects include cones
# (type 23), surfaces (type 18, 24), solids (type 19), smart-solids (type 2) and meshes (type 105).
#
_CADCONFORM_CHECK_3D_OBJECTS = 1

#
# If this option is enabled, then the "Attached Tags" tab page will appear in the Feature Table
# Editor, allowing the administrator to define additional checks on tags attached to other features.
# If this variable is disabled, then the tab page will not appear and any features with tag
# requirements defined will have these options ignored for the purposes of checking and reporting. 
#
_CADCONFORM_CHECK_ATTACHED_TAGS = 1

#
# This option controls whether or not a border sheet must be attached to each master model for
# conformance purposes. If it is ON and no border sheet is attached to a master model, then an error
# will appear in both the Conform and Report tools. Reference files are unaffected by this option.
#
_CADCONFORM_CHECK_BORDERSHEETS = 0

#
# Always check components of cells, whether known or unknown. If this option is OFF, then cell
# components are never checked unless the cell is unknown and the option 'Allow Unknown Conforming
# Cells' is checked.
#
_CADCONFORM_CHECK_CELLCOMPONENTS = 0

#
# Allows cells to be checked and added to Feature Tables. If zero, then all shared cells will also be
# ignored, since they are only cell headers. Note that ignoring cells will also ignore their
# contents.
#
_CADCONFORM_CHECK_CELLS = 1

#
# Check components of complex headers, i.e: text nodes, complex shapes, complex chains.
#
_CADCONFORM_CHECK_COMPLEXCOMPONENTS = 1


#
# Allows elements created by GEOPAK to be checked and added to the feature table. It is ON by default.
#
_CADCONFORM_CHECK_GEOPAK = 1

#
# This option allows models that are not placable as cells to match the standard when checking cell
# libraries. This is sometimes useful when legacy cells are kept in the cell library but no longer
# allowed to be placed. Cells that are hidden in this way may be allowed to match the standard, but
# they will not be shown when conforming, drafting or using the CADconform Cell Selector.
#
_CADCONFORM_CHECK_HIDDEN_CELLS = 0


#
# Defines level names to globally ignore for the purposes of checking, reporting and watermarking.
# Multiple level names are allowed using a comma separator. Wildcards are allowed, for example "Level
# [1-9],Level [1-5][0-9],Level 6[0-3]" will match all legacy level names (Level 1-63) from
# MicroStation J and earlier.
# 
# Regular expressions (i.e. wildcards) are supported as follows:
# 	?		: Represents any single digit (0-9) or character (letter or symbol)
# 	*		: Represents any number of digits or characters
# 	|		: Represents one or zero digits or characters
# 	[ABC]		: Represents a subset of allowed characters (A, B or C)
# 	[A-Z]		: Represents a range of allowed characters (from A to Z)
# 	[^A-Z]		: Represents a range of disallowed characters (from A to Z)
# 	[ABC,DEF]	: Represents a subset of allowed strings (ABC or DEF)
# 	[[0-9],[DEF]]	: Represents one digit (from 0 to 9), or one character (D, E or F).
#  
# Any other digit or character besides the wildcard characters are considered string literals and
# will be matched exactly with case-sensitivity.
#
_CADCONFORM_CHECK_IGNORED_LEVELS = ""

#
# Allows elements created by InRoads to be checked and added to the feature table. It is ON by
# default.
#
_CADCONFORM_CHECK_INROADS = 1

#
# Means that Conform will check for overridden text settings in multiline dimensions. This is included
# for legacy support of previous CADconform versions, which would allow multiline dimensions that had
# the correct global text settings, even though the actual displayed text settings were incorrect
# (for example, a different font was displayed). This should usually be turned ON, unless legacy
# support of models watermarked prior to v7.01.41 of CADconform is required.
#
_CADCONFORM_CHECK_MULTILINE_DIMS = 1

#
# Allows patterning cells, regions and hatching to be checked and added to Feature Tables. If turned
# off (set to zero), then all patterns will be ignored.
#
_CADCONFORM_CHECK_PATTERNS	= 0

#
# Allow shape types in linear settings box (Feature Type Options).
#
_CADCONFORM_CHECK_SHAPESASLINEAR = 1

#
# Check shared cell definitions. If this option is OFF, then shared cell definitions and their
# contents will be skipped.
#
_CADCONFORM_CHECK_SHAREDCELLDEF = 0

#
# This option enables the checking for Signature Cells in each master model. This may affect the
# conformity of a file in both the Conform and Reporting tools.
#
_CADCONFORM_CHECK_SIGNATURECELL = 0

#
# Allows tags (type 37) to be checked and added to Feature Tables.
#
_CADCONFORM_CHECK_TAGS = 0

#
# Allows text types to be checked and added to Feature Tables (includes tags, nodes and dimensions).
#
_CADCONFORM_CHECK_TEXT = 1

#
# This option enables the checking for Title Blocks in each master model. This may affect the
# conformity of a file in both the Conform and Reporting tools.
#
_CADCONFORM_CHECK_TITLEBLOCK = 0

#
# Allows elements created by MicroStation Triforma to be checked and added to the feature table. It is
# ON by default.
#
_CADCONFORM_CHECK_TRIFORMA = 0

#
# This option defines whether to check user data attributes by default for conform and report, and
# also whether defined attributes are ON by default when adding a feature to the feature table. User
# Data Attributes are commonly used by third party applications such as Geopak and InRoads, and are
# displayed in MicroStation's 'Element Information' dialog box under the 'Attributes' tab page. It is
# OFF by default.
#
_CADCONFORM_CHECK_USERATTRIBUTES = 0

#
# Defines a semi-colon separated list of paths to the standard colour tables (MicroStation *.TBL
# files) that are allowed to be attached to the design file. If a design file is opened that has a
# colour table different to these then a conformance error will occur.
#
_CADCONFORM_COLOURTABLES = 

#
# This option defines the required file naming convention, with each template represented as
# semi-colon separated quoted strings, which usually contain either wildcard characters or regular
# expressions.  The type of Regular Expressions supported are defined by the variable:
# _CADCONFORM_WILDCARD_TYPE. The file name and extension should always be specified, for example
# 'PROJ-*.DGN'. If more than one format is allowed, then multiple formats can be entered separated by
# a semi-colon, or as separate lines using the append command '>'. Multiple formats are effectively a
# logical 'OR', so for example:
# 	_CADCONFORM_CONVENTION_FILENAME = "B-0??.DGN"
# 	_CADCONFORM_CONVENTION_FILENAME > "C-0??.DGN"
# Would match 'B-012.DGN' OR 'C-056.DGN' but not 'D-012.DGN' if _CADCONFORM_WILDCARD_TYPE = 3.
# An example using Perl regular expressions (_CADCONFORM_WILDCARD_TYPE = 4) to match the AEC standard
# or General disciplines might be:
# 	_CADCONFORM_CONVENTION_FILENAME =
# "[a-zA-Z0-9_.]{1,20}G(BS|CS|IG|KP)[a-zA-Z0-9_.]{4}(dwg|dgn|DWG|DGN)"
# 
# Each template will be displayed as a selectable suggestion in the Conform dialog.
#
_CADCONFORM_CONVENTION_FILENAME = ""

#
# This string defines a human-readable description of each template string for the file naming
# convention defined by the variable _CADCONFORM_CONVENTION_FILENAME above. There should be one
# description for each template.
# For example, it might read "General Discipline";"Hazardous Materials";"Survey/Mapping" so the user
# can choose this named template rather than the string it must match, which can be complex for long
# regular expressions. This string will be displayed in the list of choices in Conform when choosing
# the template to change the file name to.
# For example, the AEC file naming standard might be:
#	_CADCONFORM_CONVENTION_FILENAME_DESCR = "General Discipline (G-BS,G-CS,G-IG,G-KP)"
# 	_CADCONFORM_CONVENTION_FILENAME_DESCR > "Hazardous Materials
# (H-DT,H-EL,H-IG,H-LG,H-PP,H-QP,H-SC)"
#	_CADCONFORM_CONVENTION_FILENAME_DESCR > "Survey/Mapping (V-AL,V-CP,V-EU,V-HP,V-HT,V-IG,V-LG)"
#	...etc.
#
_CADCONFORM_CONVENTION_FILENAME_DESCR = 

#
# This option defines a documentation file or resource (such as a website URL) which describes the
# file naming convention. This can be helpful where the number of possible string combinations is
# quite large, such as for the AEC standard. This document or URL will be opened when the user clicks
# on the "More Info" button when fixing a mismatched design file name. If this variable is not
# defined or empty, then the "More Info" button will simply show the regular expression template that
# needs to be matched, which may be less explanatory.
#
_CADCONFORM_CONVENTION_FILENAME_HELP_FILE = ""

#
# This option defines a section of text which explains the file naming convention to the user. This
# can be helpful where the naming standard must follow some simple rules. This message will be
# displayed in Conform when an invalid file name is detected, and also in the dialog to fix the
# design file name. Semi-colons are treated as new-line characters, allowing multiple lines to be
# defined. For example, to show a help message explaining the AEC standard for file naming:
#	_CADCONFORM_CONVENTION_FILENAME_HELP_STRING = "1) Project Number: 1-20 characters"
# 	_CADCONFORM_CONVENTION_FILENAME_HELP_STRING > "2) Discipline: 1 upper-case letter followed by a
# hyphen (eg: A-,C-,E-,G-)"
# 	_CADCONFORM_CONVENTION_FILENAME_HELP_STRING > "3) Model file type: 2 upper-case letters (eg:
# 3D,DT,FL,EL,HP,KP,SC)"
#	_CADCONFORM_CONVENTION_FILENAME_HELP_STRING > "4) Text: Up to 4 characters"
# 	_CADCONFORM_CONVENTION_FILENAME_HELP_STRING > "For example: a General Border Sheet for project
# '00' might be '00G-BS000.dgn'"
#
_CADCONFORM_CONVENTION_FILENAME_HELP_STRING = ""

#
# This option defines whether the user should be prompted to fix an incorrect design file when running
# Conform. If set to 0, then the user will not be prompted to fix the file name when Conforming,
# however an error will still be generated when a Report is run on the file.
#
_CADCONFORM_CONVENTION_FILENAME_PROMPT = 1

#
# This option defines the required model naming convention, with each template represented as
# semi-colon separated quoted strings, which usually contain either wildcard characters or regular
# expressions. The type of Regular Expressions supported are defined by the variable:
# _CADCONFORM_WILDCARD_TYPE.
# If more than one format is allowed, then multiple formats can be entered separated by a semi-colon,
# or as separate lines using the append command '>'.
# Multiple formats are effectively a logical 'OR', so for example:
# 	_CADCONFORM_CONVENTION_MODELNAME = "A-SHEET-??"
# 	_CADCONFORM_CONVENTION_MODELNAME > "B-SHEET-??"
# Would match 'A-SHEET-01' OR 'B-SHEET-99' but not 'D-SHEET-99.DGN' if _CADCONFORM_WILDCARD_TYPE =
# 3.
#
# An example using Perl regular expressions (_CADCONFORM_WILDCARD_TYPE = 4) to match the AEC standard 
# for Architectural disciplines might be:
# 	_CADCONFORM_CONVENTION_MODELNAME =
# "[a-zA-Z0-9_.]{1,20}(AD|A|AS|AE|AI|AG|AF)[0-9]{3}[a-zA-Z0-9_.]"
# Each template will be displayed as a selectable suggestion in the Conform dialog.
#
_CADCONFORM_CONVENTION_MODELNAME = ""

#
# This string defines a human-readable description of each template string for the model naming
# convention defined by the variable _CADCONFORM_CONVENTION_MODELNAME above. There should be one
# description for each template.
# For example, it might read "General (Symbols, Legends, Notes)";"Plans (horizontal, plan &
# profile)";"Elevations" so the user can choose this named template rather than the string it must
# match, which can be complex for long regular expressions. This string will be displayed in the list
# of choices in Conform when choosing the template to change the model name to.
# For example, the model naming standard might be:
#	_CADCONFORM_CONVENTION_MODELNAME_DESCR = "General (G-S*,G-L*,G-N*)"
#	_CADCONFORM_CONVENTION_MODELNAME_DESCR > "Plans (P-H*,P-P*)"
#	_CADCONFORM_CONVENTION_MODELNAME_DESCR > "Elevations (E-*)"
#	...etc.
#
_CADCONFORM_CONVENTION_MODELNAME_DESCR = 

#
# This option defines a documentation file or resource (such as a website URL) which describes the
# model naming convention. This can be helpful where the number of possible string combinations is
# quite large, such as for the AEC standard. This document or URL will be opened when the user clicks
# on the "More Info" button when fixing a mismatched model name. If this variable is not defined or
# empty, then the "More Info" button will simply show the regular expression template that needs to
# be matched, which may be less explanatory.
#
_CADCONFORM_CONVENTION_MODELNAME_HELP_FILE = ""

#
# This option defines a section of text which explains the model naming convention to the user. This
# can be helpful where the naming standard must follow some simple rules. This message will be
# displayed in Conform when an invalid model name is detected, and also in the dialog to fix the
# model name. Semi-colons are treated as new-line characters, allowing multiple lines to be defined.
# For example:
#	_CADCONFORM_CONVENTION_MODELNAME_HELP_STRING = "1) Project Number: 1-4 characters"
# 	_CADCONFORM_CONVENTION_MODELNAME_HELP_STRING > "2) Model type: 1 upper-case letter (eg: 'S' for
# Sheet)"
#	_CADCONFORM_CONVENTION_MODELNAME_HELP_STRING > "3) Text: Up to 4 characters"
#
_CADCONFORM_CONVENTION_MODELNAME_HELP_STRING = ""

#
# This option defines whether the user should be prompted to fix an incorrect model name when running
# Conform. If it is turned OFF (set to 0), then the user will not be prompted to fix the model name
# when Conforming, however an error will still be generated when a Report is run on the file.
#
_CADCONFORM_CONVENTION_MODELNAME_PROMPT = 1

#
# Makes Conform attempt to copy any user enter data fields when one cell is replaced with another.
#
_CADCONFORM_COPY_DATA_FIELDS = 1

#
# This sets the default location of Dictionary Files to import/export.
#
_CADCONFORM_DICT_DIR = $(CADCONFORM_SERVER_DIR)Dictionary Files/

#
# This variable defines a comma separated list of table names that are not allowed to be created by
# the user as feature table names. In addition, these illegal tables will never be displayed by the
# Feature Table Manager, even if they already exist.
# This variable is not usually required to be set, however some database systems have built-in tables
# that should never be created or overwritten. Therefore if your database defines any reserved words
# or table names, they should be defined in this variable to ensure the user never accidentally
# overwrites them. Note that feature tables always have the prefix "Table_" prepended to them in the
# database, so the full table name for a table named "Civil" will be "Table_Civil".
#
_CADCONFORM_DISALLOWED_TABLE_NAMES = "CONSTRAINTS,PRIVILEGES,TYPES"

#
# This option specifies the path to the discipline files that will available for this workspace.
#
_CADCONFORM_DISCIPLINES_DIR = $(CADCONFORM_SERVER_DIR)Disciplines/

#
# Set the path to the help file and any other documentation files.
#
_CADCONFORM_DOCS_DIR = $(CADCONFORM_SERVER_DIR)Docs/

#
# This option allows features with allowed ranges to use an additional symbology dialog for choosing
# the desired settings within the allowed ranges. 0 = OFF, 1 = ON.
#
_CADCONFORM_DRAFT_BY_RANGES = 1

#
# CADconform Draft usually displays the Drafting Menu tables in alphabetical order of feature table
# name. Setting this option to '1' will cause the feature tables in Draft to be opened in
# alphabetical order of feature table description instead of the table name.
#
_CADCONFORM_DRAFT_MENUS_ORDERBYDESCRIPTION = 0

#
# This defines whether a missing drawing scale is allowed when running reports. It is OFF (0) by
# default so that missing scales will be reported to the user.
#
_CADCONFORM_DRAWINGSCALE_ALLOW_NONE = 0

#
# Allows the current status of the annotation scale lock to be ignored when the drawing scale is
# calculated from the active annotation scale for the model. If this value is ON, then the current
# annotation scale will always be the same as the model annotation scale. If it is OFF, then the
# current annotation scale will be '1.0' when the annotation scale lock is OFF, and will match the
# model annotation scale when the annotation scale lock is ON.
#
_CADCONFORM_DRAWINGSCALE_ANNO_LOCK = 0

#
# This option allows a user-defined keyin to be called when the drawing scale is changed. For example,
# if you always want the global linestyle scale (aka the AutoCAD LTSCALE) to be updated to match the
# current CADconform drawing scale, you could set this as:
#     $ DWG LTSCALE $(CADCONFORM_DRAWING_SCALE)
#
# Note that this should not be used for one-shot commands (such as attaching a reference file), as
# the keyin may be called multiple times when the drawing scale dialog is opened or the scale is
# changed or read from the design file. Therefore only enter commands that can be recalled multiple
# times safely.
#
_CADCONFORM_DRAWINGSCALE_COMMAND = ""

#
# This string represents the default value of the drawing scale when it has not been set by any other
# value.
#
_CADCONFORM_DRAWINGSCALE_DEFAULT_VALUE = 1.00

#
# This option controls whether or not the allowed drawing scales are imported from the 'scales.def'
# file as defined by the MicroStation variable 'MS_CUSTOMSCALEDEF'. The allowed values are as
# follows:
# 	0 - means that the scales.def file is not used.
# 	1 - means that the scales.def file is used and all scales must match one of these values.
# 	2 - means that the scales.def file is used but the user can also override these values.
# Note that if this option is set to 1 or 2, then the values defined in the allowed drawing scales
# are ignored.
#
_CADCONFORM_DRAWINGSCALE_USE_DEFAULT = 2

#
# Defines the allowed active Drawing Scale values allowed, as a comma separated list of values. If
# undefined or blank then any scale is allowed. If the list of values is surrounded by square
# brackets, then the values represent suggested scales only and the scale can be set to any value.
#
_CADCONFORM_DRAWINGSCALE_VALUES = "[1.0,10.0,30.0,50.0,100.0]"

#
# This option determines whether non-administrators can view features in the feature table that have
# the status 'Hide in Conform and Draft' set.
# By Default this option is OFF.
#
_CADCONFORM_FEATURES_SHOWHIDDEN = 0

#
# This option determines whether users automatically inherit features suggested by other users when
# they open a feature table. If it is ON, then all users will automatically have suggested features
# added to their feature tables. If it is OFF, then suggested features are only automatically loaded
# by the user who suggested them. This means that conform/report will automatically ignore features
# suggested by the user, though this has no effect on certification. By Default this option is OFF.
#
_CADCONFORM_FEATURES_SHOWSUGGESTED = 0

#
# Defines a directory (or semi-colon ';' separated list of directories) to look for File Data Source
# Names for the Feature Tables. 'File DSNs' are ODBC Data Source definitions stored in a plain ASCII
# format, which CADconform uses to connect to the database and store feature tables. If this variable
# is blank or commented out, then any string can be typed into the ODBC database source name in the
# login dialog box.
#
_CADCONFORM_FILEDSN_DIR = $(CADCONFORM_SERVER_DIR)File DSN/Feature Tables/*.dsn

#
# Defines the full path of the executable function to produce HTML reports.
#
_CADCONFORM_HTMLEXPORT_EXEFILE = $(CADCONFORM_SERVER_DIR)bin/HTML Report.exe

#
# Defines the default output directory for HTML reports.
#
_CADCONFORM_HTMLEXPORT_OUTDIR = $(CADCONFORM_SERVER_DIR)HTML/

#
# Defines the amount of information stored in the Debugging log file.
# 	0	: is the lowest level
# 	1	: means moderate level
# 	2	: means the highest level
# Higher debugging levels are useful for trouble-shooting problems with the software.
#
_CADCONFORM_LOG_FILE_DEBUGLEVEL = 0

#
# This option prompts the user to place a marker cell if one doesn't exist in the drawing.
# 	0 = OFF
# 	1 = ON
#
_CADCONFORM_MARKERCELL = 1

#
# Defines the maximum actual error for all calculations (such as text size, hatch spacing, dimension
# leaders, etc) that compare the CAD standard with the design file elements for conformance in Units
# of Resolution (UORs). This is necessary due to the coordinate rounding that occurs in design files,
# for example a cell scale of '2.5' might be stored in the design file as '2.50001'. Increase this
# number if elements are regularly not conforming when they meet the standard. The 'Diff' value in
# Conform will display the scale this should be set to. This should usually be a floating point value
# greater than zero. It is usually set to 1 to indicate that any error value greater than 1 UOR
# indicates a conformance error. 
# NOTE: This variable replaces the obsolete variable: '_CADCONFORM_MAX_ERRORSCALE' in previous
# releases_CADCONFORM_MIN_MU_ERRORSCALE to define a maximum and minimum error boundary.
#
_CADCONFORM_MAX_ERROR_UORS = 1

#
# This is the name of the CADconform menu as it appears on the MicroStation main menu bar. You may
# want to change it to alter the position of the keyboard accelerator '~' if it clashes with an
# existing menu.
#
_CADCONFORM_MENU_NAME = "~CADconform"

#
# Defines the minimum scale of error allowed in master units. This value is automatically used to
# override _CADCONFORM_MAX_ERROR_UORS in models where the working units are sufficiently low as to
# cause problems with rounding.
# For example, a model with working units set to 1 unit of resolution per master unit (1 UOR) would
# mean 2.5mm text would match 3.5mm text with an error of 1 UOR. This would obviously cause many
# conformance errors to be ignored. This error scale therefore represents the minimum allowed error
# in terms of master units, which may therefore be less than the maximum allowed error in terms of
# UORs.
# 
# To illustrate this further, if _CADCONFORM_MIN_MU_ERRORSCALE = "0.01" and the user opens a model
# with 1 MU = 1 UOR, then the value of _CADCONFORM_MAX_ERROR_UORS = 1 is overridden, and any
# calculation will be accurate to 0.01 UORs.
#
_CADCONFORM_MIN_MU_ERRORSCALE = 

#
# This string defines a MicroStation keyin command that will be called automatically when the user is
# prompted to place a missing border sheet. For example, it could be a macro that guides the user
# through the choice of border sheet, scale and origin; or replaces a legacy border sheet with a
# newer file.
#
_CADCONFORM_PLACE_BORDER_KEYIN = ""

#
# This option enables or disables checking of the active colour table when a design file is opened. If
# it is OFF then no checking is done when the file is opened, however it will still be checked by the
# Conforming or Reporting tools.
#
_CADCONFORM_PROMPT_COLOURTABLE_ON_FILE_OPEN = 1

#
# This option controls the automatic remapping of colours after the correct colour table is attached.
# The first option is to leave the elements alone, which may result in some elements changing colour.
# The second option will automatically remap the colours of elements so that the best matching colour
# in the new colour table is used. The third option allows the user to be prompted what to do after
# the colour table is attached.
#
_CADCONFORM_PROMPT_COLOURTABLE_REMAP = 0

#
# If ON, this means that the Drawing Scale dialog will open every time a scale has not been set for an
# opened design file. This reminds the user to manually set the drawing scale when it has not been
# set by either the border sheet or by the user saving it to the DGN.
#
_CADCONFORM_PROMPT_DRAWINGSCALES = 0

#
# This option control whether the user is prompted when a standard border sheet is attached and a
# drawing scale is already set. Uncheck this prompt if you never want to delete the drawing scale
# when a file is auto-attached. This was added for compatibility with other applications that
# automatically attach a reference file on startup.
#
_CADCONFORM_PROMPT_REF_ATTACHED = 1

#
# This option control whether the user is prompted when a standard border sheet is detached and a
# drawing scale is already set. Uncheck this prompt if you never want to delete the drawing scale
# when a file is auto-detached. This was added for compatibility with other applications that
# automatically attach a reference file on startup.
#
_CADCONFORM_PROMPT_REF_DETACHED = 1

#
# This option control whether the user is prompted when a standard border sheet is modified and a
# drawing scale is already set. Uncheck this prompt if you never want to delete the drawing scale
# when a file is auto-attached/detached. This was added for compatibility with other applications
# that automatically attach a reference file on startup.
#
_CADCONFORM_PROMPT_REF_MODIFIED = 1

#
# This sets the location of the readme / release notes file.
#
_CADCONFORM_README_FILE = $(_CADCONFORM_DOCS_DIR)MicroStation Readme.chm


#
# This sets the CADconform version string that will be replaced within watermark text. This text will
# be searched for within the watermark and replaced with the current CADconform version.
#
_CADCONFORM_REPLACETEXT_APP_VERSION_STRING = 

#
# This dictates the format of the date replacement string (eg. '%d %b %y' = '11 Jun 09' ). A brief
# list of available formatting codes is below. In general an upper-case character is a full name
# (e.g. 'Monday'), and a lower case character is abbreviated (e.g. 'Mon'):
# 	%a	Weekday name
# 	%b	Month name
# 	%d	Day of month (decimal)
# 	%H	Hour (24-hour format)
# 	%I	Hour (12-hour format)
# 	%m	Month (decimal)
# 	%M	Minute (decimal)
# 	%S	Second (decimal)
# 	%y	Year (no century)
# 	%Y	Year (with century)
#
_CADCONFORM_REPLACETEXT_DATE_FORMAT = %d %b %y

#
# This defines the current date string at the time of watermarking. This text will be searched for
# within the watermark and replaced with the current date. See also variable
# '_CADCONFORM_REPLACETEXT_DATE_FORMAT' to define the date format.
#
_CADCONFORM_REPLACETEXT_DATE_STRING = $$DATE$$

#
# This sets the dictionary version string that will be replaced within watermark text. This text will
# be searched for within the watermark and replaced with the current dictionary version.
#
_CADCONFORM_REPLACETEXT_DICTVERSION_STRING = $$VERSION$$

#
# This sets the Linespace of replacement text nodes within watermarks.
#
_CADCONFORM_REPLACETEXT_LINESPACING = 1.0

#
# This makes the line spacing of replacement text nodes within watermarks a multiple of the scale of
# the watermark. By default, this variable is 0 (off) or non-existent.
#
_CADCONFORM_REPLACETEXT_LINESPACING_SCALED = 1

#
# If defined, this string will be used to replace the string defined by
# '_CADCONFORM_REPLACETEXT_DICTVERSION_STRING' in a watermark. For example, instead of $$VERSION$$
# being replaced by 'Roadway Design v2.19', you could define an alternate string, such as 'Conforms
# to Roadway CAD Protocol version 2'. If undefined or empty, the normal method of string replacement
# will be used, whereby the names of each feature table will be listed, followed by the version
# numbers.
#
_CADCONFORM_REPLACETEXT_USERDEFINED_STRING = ""

#
# This option defines which models are automatically added to the Report dialog when a design file is
# chosen. The options are:
# 	1 : "All Models"		Means all design and sheet models found in a design file will be added
#     2 : "Active Model Only"       Means that only the last active model will be added
#     3 : "Design Models Only"      Means that only design model types will be added
#     4 : "Sheet Models Only"       Means that only sheet model types will be added
# 	5 : "Models With A Border"	Means that only models that have a standard border sheet attached will
# be added.
#     6 : "Prompt The user"         Means that a dialog will pop up prompting the user
#     7 : "Default Model Only"      Means that only the Default (initial/undeleteable) model will be added
#
# Note that a negative value (e.g. "-5") means that the option is locked and can not be modified by
# the user on the Report Advanced Options dialog.
#
_CADCONFORM_REPORT_AUTOGETMODELS = 6

#
# This option forces the Report Generator dialog to automatically add the reference files for all
# design files reported on. It is ON by default.
#
_CADCONFORM_REPORT_AUTOGETREFS = 1

#
# This variable defines a custom command to run during a report. The custom command will be run as
# soon as a design file is automatically opened during a report. Any information returned by the
# command will then populate a column in the design file report. An example of a report may be to
# check if a standard Title Block cell exists and has been populated correctly. The custom command
# can be any command run from a keyin, but will usually involve running a VBA command or MDL
# application to do the checking.
#
# The custom command consists of four comma separated values defining:
# 	1: The command name, e.g. "Check for ProjectWise tags"
#	2: The keyin command to launch, e.g. "vba run Reports.CheckTags"
#	3: The type of data returned, e.g. "0"
#	4: The required result in order for the design file to pass, e.g. "1"
#
# The type of data is an integer where:
# 	0 - defines a Yes/No or Pass/Fail or On/Off value. "0" is considered No/Fail/Off and "1" is
# Pass/Yes/On.
#	1 - defines an integer value, e.g. "6"
#	2 - defines a real or floating point value, e.g. "1.3333333"
# 	3 - defines a text string, e.g. "A0 Border Cell"
#
# The required result is defined as a string, supporting regular expressions (see
# "_CADCONFORM_CONVENTION_FILENAME" for the required syntax). For example, if a test is of type 0
# (pass/fail as defined above), and it had to pass in order to pass the design file, then enter "1"
# as the required string. Numerical ranges are also allowed, for example if a test required that the
# number of sheet models is between 1 and 2, then the required command might be:
#
# 	_CADCONFORM_REPORT_CUSTOM_COMMANDS = "Count Sheet Models, vba run Reports.CountSheetModels, 1,
# [1-2]"
#
# To define an information-only reporting column that does not fail the design file dependent on the
# result, enter the asterisk wildcard, e.g. "*" or leave the column blank.
#
# Note that multiple custom commands are supported by separating with a semi-colon or appending on
# separate lines. An example of two custom report columns launching a VBA macro is shown below:
#
#	_CADCONFORM_REPORT_CUSTOM_COMMANDS = "Check Title Block, vba run Reports.CheckTitleBlock, 0, 1"
# 	_CADCONFORM_REPORT_CUSTOM_COMMANDS > "Check Border Sheet, vba run Reports.CheckBorderCellExists,
# 0, 1"
#
# These custom commands will be displayed in the "Advanced Options" dialog on the "Design Files"
# report tab page, and can be turned ON or OFF by clicking in the list-box row.
#
_CADCONFORM_REPORT_CUSTOM_COMMANDS = ""

#
# This variable defines whether the custom design reports are optional for the user to turn ON or OFF,
# or locked permanently ON.
# The default option is OFF (0) if not defined. The allowed values are:
#	0:	User definable
#	1:	Locked on
#
_CADCONFORM_REPORT_CUSTOM_COMMANDS_LOCKED = 1


#
# This variable contains one or more (semi-colon separated) MicroStation VBA project files that will
# be automatically loaded/unloaded during a report. It can be useful when using the custom reporting
# options defined by the variable $(_CADCONFORM_REPORT_CUSTOM_COMMANDS) to invoke VBA commands.
# For example: _CADCONFORM_REPORT_CUSTOM_MVBA = $(_CADCONFORM_SCRIPTS)C4M_Reporting.mvba
#
_CADCONFORM_REPORT_CUSTOM_MVBA = ""

#
# This option makes CADconform put a double-cross through an existing valid watermark if a report is
# run on a model and one or more conformance errors are found. It is ON (set to 1) if not defined.
#
_CADCONFORM_REPORT_DOUBLECROSS_ON_FAIL = 1

#
# Defines a directory (or semi-colon ';' separated list of directories) to look for File Data Source
# Names for reporting only. 'File DSNs' are ODBC Data Source definitions stored in a plain ASCII
# format, which CADconform uses to connect to the database when writing reports. If this variable is
# undefined, then CADconform will use the same database for reporting as it does for the feature
# tables.
#
_CADCONFORM_REPORT_FILEDSN_DIR = $(CADCONFORM_SERVER_DIR)File DSN/Reporting/*.dsn


#
# This defines a semi-colon separated list of reference files/models to ignore when reporting.
# Wildcard characters such as '*' and '?' s are allowed, e.g. "Legacy_*.dgn".
#
# The syntax is: [DESIGN FILE NAME][,MODEL NAME];...
#
# Either the file name, the model name or both can be specified.
#
# Examples: "Legacy.dgn";"Legacy *.dgn,Legacy Model";",Legacy Model"
#
_CADCONFORM_REPORT_IGNORED_REFFILES = ""

#
# The maximum number of error to log in a report before the user is prompted whether to continue. See
# also "_CADCONFORM_REPORT_PROMPTMAXLOG".
#
_CADCONFORM_REPORT_MAXLOGGABLE = 1000

#
# This field allows the user to enter any naming convention for the report. The string can contain any
# characters, however the following sub-strings have special meaning:
# 	$$USERFULLNAME$$		This is expanded to the currently logged in user's full name
# 	$$USERFIRSTNAME$$		This is expanded to the currently logged in user's first name
# 	$$USERINITIALS$$			This is expanded to the currently logged in user's first two initials
# 	$$CURRENTFILE$$			This is expanded to the active design file name
# 	$$CURRENTMODEL$$		This is expanded to the active model name
# MicroStation configuration variables are also supported using $(CONFIGNAME).
#
_CADCONFORM_REPORT_NAMING = ""

#
# Prompt the user when a report exceeds a defined number of rows.
# See also _CADCONFORM_REPORT_MAXLOGGABLE.
#
_CADCONFORM_REPORT_PROMPTMAXLOG = 1

#
# Prior to version v7.01.46, CADconform would fetch nested references (references of references) in
# the wrong order, and sometimes to an incorrect depth (_CADCONFORM_REPORT_REFS_NESTLEVEL was
# ignored). Correcting this problem may result in some previous valid watermark becoming invalidated,
# as the number of reference files certified may change when nesting is correctly observed. If
# validity of legacy watermarks is important, then this option can be enabled to force CADconform to
# use the older (and unreliable) algorithm to determine reference nesting; however for creation of
# newer watermarks, this option should remain OFF.
#
_CADCONFORM_REPORT_REFS_LEGACY_NESTING = 0

#
# This option defines how many levels of reference file nesting is supported by the 'Find Ref Files'
# button. Valid numbers are from -1 to N, where N is a positive integer greater than or equal to
# zero.
# -1: Find all nested reference files
#  0: Find only the ref files directly attached to the master file
#  1: Find only the first level of nesting
#  2: Find only the second level of nesting
#  ...etc
#
_CADCONFORM_REPORT_REFS_NESTLEVEL = -1

#
# This option defines whether reference models drawing scale is independent of the master model. It
# should normally be ON by default, which means that  each reference file can define its own scale,
# or if none is defined then it uses the default scale.
# When this option is OFF, the scale of a reference file is assumed to match the drawing scale of the
# master model.
#
_CADCONFORM_REPORT_REFS_SCALEINDEPENDENT = 1

#
# This option defines whether dimensions in reference files will be unscaled by the reference
# attachment scale or not. It was set to ON ("1") by default from CADconform v7.00.00 until 
# v7.01.25. From v7.01.26 it can only be enabled by setting the value to "2". This re-interpretation
# of the value was necessary because the calculation used to derive the effective reference scale was
# found to be erroneous when the Units of Resolution (UORs) in the master and reference files
# differed. Because of this, the variable is no longer required for most users. This change
# effectively disables the setting for existing CADconform users, as scaling will be disabled  if it
# is set to "0" or "1", which were the only previously allowed values. If the value is set to "2",
# then all dimension sizes will be unscaled by the current reference attachment scale. The existence
# of this variable will likely be phased out in a future release of CADconform and is kept for legacy
# support only.
#
_CADCONFORM_REPORT_REF_UNSCALE_DIMS = 0

#
# This variable defines the location of the DSN-less connection string used to connect to an Excel
# spreadsheet. It is used when exporting a Report to Excel. This does not normally need to be
# changed, but if you need to change the Excel connection settings for some reason, you can copy this
# file and enter the modified file name here.
#
_CADCONFORM_REPORT_TEMPLATE_DSN_XLS = $(CADCONFORM_SERVER_DIR)File DSN/Templates/Excel Connector.dsn


#
# Track design changes in the database when using the Conform tool.
#
_CADCONFORM_REPORT_TRACKING = 0

#
# This option defines whether the user can define their own scan period in Conform and Report, or not.
# It is OFF by default.
#
_CADCONFORM_SCANPERIOD_ALLOWUSER = 0

#
# This variable defines the scan period settings for Conforming and Reporting. 
# These settings directly reflect the settings shown in the Preferences 'Scan Period' page, as well
# as the Conform Scan Criteria dialog, under the 'Scan Period' tab page.
# These options are stored as a string of 14 comma separated numbers with the following format:
# 	 1) Date #1 active (0: OFF, 1: ON)
#	 2) Segment #1 (0: Before, 1: After)
# 	3) Mode #1 (0: This date, 1: V8 Conversion, 2: Today, 3: First certified, 4: Last Certified,
# etc...)
#	 4) Day #1 (1-31. Ignored if Mode #1 is not "0")
#	 5) Month #1 (1-12. Ignored if Mode #1 is not "0")
#	 6) Year #1 (1900-2038. Ignored if Mode #1 is not "0")
#	 7) Date #2 active (0: OFF, 1: ON)
#	 8) Operator (0: Or, 1: Until, 2: And. Ignored if Date #2 is not "1")
#	 9) Segment #2 (0: Before, 1: After. Ignored if Date #2 is not "1")
# 	10) Mode #2 (0: This date, 1: V8 Conversion, 2: Today, 3: First certified, 4: Last Certified,
# etc...)
#	11) Day #2 (1-31. Ignored if Date #2 is not "1" and Mode #2 is not "0")
#	12) Month #2 (1-12. Ignored if Date #2 is not "1" and Mode #2 is not "0")
#	13) Year #2 (1900-2038. Ignored if Date #2 is not "1" and Mode #2 is not "0")
# 	14) Or Selector (0: Whichever is earlier, 1: Whichever is later. Ignored if Date #2 is not "1" and
# Operator is not "0")
#	
# Some examples are shown below: 	
#	_CADCONFORM_SCANPERIOD_SETTINGS = "1, 1, 1, 1, 8, 2007, 0, 2, 1, 3, 6, 5, 2016, 0"
# This will scan all elements that were last modified after V8 conversion.
#
#	_CADCONFORM_SCANPERIOD_SETTINGS = "1, 1, 1, 1, 8, 2007, 1, 2, 0, 3, 6, 5, 2016, 0"
# This will scan all elements that were last modified after V8 conversion until before first
# certification.
#	_CADCONFORM_SCANPERIOD_SETTINGS = "1, 1, 1, 1, 8, 2007, 1, 0, 1, 0, 6, 5, 2016, 1"
# This will scan all elements that were last modified after V8 conversion or after 6th May 2016,
# whichever is last.
#
# If the string is empty or undefined, then this option will not be active by default.
#
_CADCONFORM_SCANPERIOD_SETTINGS = ""

#
# Location of any extra script files for use with the 'CADCONFORM RUNSCRIPT' keyin
#
_CADCONFORM_SCRIPTS = $(CADCONFORM_SERVER_DIR)scripts/

#
# If enabled, then this option means that only one Signature Cell is allowed for each master model. If
# multiple or no Signature Cells are found, then a conformance error is generated.
#
_CADCONFORM_SIGNATURECELL_ALLOW_ONE = 0

#
# This defines the full cell library name and path for the Signature Cell. Multiple cell libraries can
# be defined with a semi-colon separator.
#
_CADCONFORM_SIGNATURECELL_CELLLIBS = ""

#
# This string defines the allowed cell names for the Signature Cells. Multiple cells can be defined
# with a semi-colon separator.
#
_CADCONFORM_SIGNATURECELL_CELLS = ""

#
# This option ensures that only the default model in a design file will be checked for signature
# cells. The default model is the initial model that cannot be deleted by the user.
#
_CADCONFORM_SIGNATURECELL_DEFAULT_MODEL = 0

#
# If ON, then design files created by TRICAD will be supported. This will add an extra 'TRICAD' prompt
# whenever a new feature table is created, to define whether the feature table is for use with TRICAD
# data. 0 = OFF, 1 = ON.
#
_CADCONFORM_SUPPORT_TRICAD = 0

#
# This option forces the Feature Table Manager to display feature tables in alphabetical order of
# their descriptions. If this variable is missing or turned OFF, then feature tables will be ordered
# by name instead.
#
_CADCONFORM_TABLE_ORDERBY_DESCRIPTION = 0

#
# This sets the URL for Technical Support information.
#
_CADCONFORM_TECHSUPPORT_URL = "http://www.altivasoft.com/Support"

#
# This option forces text to always be drawn with the colour defined by the active feature in the
# Drafting Menu. This has the same effect as the 'Colour Matches Elem' toggle in the 'Also Match' tab
# page of the Feature Options dialog for Text features; except that it only applies to drafting and
# does not check the override colour when conforming. It is OFF by default.
#
_CADCONFORM_TEXT_FORCECOLOUROVERRIDEMATCH = 1

#
# If enabled, then this option means that only one title block is allowed for each master model. If
# multiple or no title blocks are found, then a conformance error is generated.
#
_CADCONFORM_TITLEBLOCK_ALLOW_ONE = 0

#
# This defines the full cell library name and path for the Title Block. Multiple cell libraries can be
# defined with a semi-colon separator.
#
_CADCONFORM_TITLEBLOCK_CELLLIBS = ""

#
# This string defines the allowed cell names for the Title Block. Multiple cells can be defined with a
# semi-colon separator.
#
_CADCONFORM_TITLEBLOCK_CELLS = ""

#
# This option ensures that only the default model in a design file will be checked for title block
# cells. The default model is the initial model that cannot be deleted by the user.
#
_CADCONFORM_TITLEBLOCK_DEFAULT_MODEL = 0

#
# Set this to "1" to force CADconform to reorder all dockable windows on startup, or docking /
# undocking of a CADconform window. This option should normally be OFF (0) unless the computer has
# problems with dockable windows disappearing, caused by known Microsoft security patch KB2993651 and
# for some reason the official patch #2973201 can not be installed.
#	See also http://support.microsoft.com/kb/2993651
#	and http://support2.microsoft.com/kb/2998984/en-us
#
_CADCONFORM_TOOLS_REORDERALLWINDOWS = 0

#
# This determines if Dictionary/Feature Table Versioning will be used. 0 = OFF, 1 = ON. If versioning
# is ON, then the administrator will be prompted for a revision number when a feature table is
# exported to the database.
#
_CADCONFORM_USEDICTVERSIONING = 1

#
# This option allows user groups to be used instead of naming each individual user in the User
# Manager. If this option is enabled, then users can log into CADconform without needing to enter a
# password.
#
_CADCONFORM_USERS_ALLOW_GROUPS = 0

#
# This setting only works if the 'Allow User Groups' option is enabled. It represents the current user
# group to use in a given workspace (e.g. 'CIVIL', 'ARCH', 'MECH', etc).  Usually this is defined in
# the User Configuration File (UCF) or Project Configuration File (PCF) so that different workspaces
# can use different default user groups without the user having to log in with different names and
# passwords. Multiple group names can be allowed concurrently. Each group name should be separated by
# a semi-colon ';'.
#
_CADCONFORM_USERS_CURRENT_GROUP = ""

#
# This sets the location of the user/password *.PWL file.
#
_CADCONFORM_USERS_FILE = $(CADCONFORM_SERVER_DIR)Users/cadconform.pwl

#
# This warns the administrator if the database has been worked on with a newer major version of
# CADconform than the current version. A major version is the most significant digit in the version
# number, e.g. "v6.0.0" vs "v7.0.0"
#
_CADCONFORM_WARN_MAJOR_UPGRADE = 1

#
# This warns the administrator if the database has been worked on with a newer minor version of
# CADconform than the current version. A minor version is the second-most significant digit in the
# version number, e.g. "v6.4.0" vs "v6.5.0"
#
_CADCONFORM_WARN_MINOR_UPGRADE = 0

#
# This variable controls whether CADconform does an integrity check of elements in reference files
# that are not shown due to reference file clipping. If this option is OFF (set to zero), then
# elements that have been clipped out can be modified without invalidating the watermark. This allows
# large datasets to be scanned much more quickly than if all reference elements have to be
# checksummed. If reference files are not checked for watermarking (i.e.
# _CADCONFORM_CERTIFY_CHECK_REFERENCE_WATERMARKS=0) then this variable has no effect. If not set, the
# default setting for this variable is 1 (ON). 
#
_CADCONFORM_WATERMARKS_CHECK_CLIPPEDREFELMS = 0

#
# If this option is ON, then text and dimension font names used in a certified model will be checked
# and will have to match the original model at certification time. This may cause watermark
# invalidation if a model uses a font that is not available on the system in which the model is
# opened. For this reason, it may be better to leave this option OFF if the models are likely to be
# opened on a computer where the fonts won't be mapped. It may be better to turn this option ON if
# you want to be certain that the file is viewed with the correct fonts and you want invalidation to
# occur if a different font is substituted in for the original one used.
#
_CADCONFORM_WATERMARKS_CHECK_FONTNAMES = 0

#
# If this option is ON, then text and dimension font numbers used in a certified model will be checked
# and will have to match the original model at certification time. This may cause watermark
# invalidation if a model uses a font that is not available on the system in which the model is
# opened, or if an available font is mapped to a different font number. For this reason, it is
# usually safer to leave this option OFF unless you maintain strict control of your MicroStation
# environment. This option is largely included for legacy watermark compatibility.
#
_CADCONFORM_WATERMARKS_CHECK_FONTNUMS = 0

#
# This variable allows the administrator to define whether to include additional meta-data
# (non-graphical design file information) in the checksum for watermarking. Examples of meta-data
# include: Level symbology, level filters, text styles, line styles and saved views. Changes to any
# of this meta-data will result in watermark invalidation. This setting can be either:
# 	-1 : The user can control checking of meta-data via the toggle on the Advanced Options dialog.
# 	 0 : Checking of meta-data is turned OFF for all users
# 	 1 : Checking of meta-data is turned ON for all users
#
_CADCONFORM_WATERMARKS_CHECK_METADATA = -1

#
# This variable allows the administrator to define whether to include raster images and attachments
# (element types 87, 88 and 90) in the checksum for watermarking. If raster attachments are included,
# then any changes to the attachments (such as turning off, detaching or attaching a new image) will
# invalidate the watermark. This setting can be either:
# 	-1 : The user can control checking of raster via the toggle on the Advanced Options dialog.
# 	 0 : Checking of raster is turned OFF for all users
# 	 1 : Checking of raster is turned ON for all users
#
_CADCONFORM_WATERMARKS_CHECK_RASTER = 0

#
# If this option is ON, then all marker cells and watermark cells must be correctly defined in the
# feature tables, or they will fail conformance. If it is OFF, then marker cells and watermarks
# always automatically pass conformance; even if they are not defined in the feature tables.
#
_CADCONFORM_WATERMARKS_CONFORM = 0

#
# Forces CADconform to automatically invalidate all watermarks in a drawing when a design file
# modification occurs. If this is OFF then watermarks must be checked for validity manually using the
# 'Read Watermark' tool. 0 = OFF, 1 = ON.
#
_CADCONFORM_WATERMARKS_INSTANTINVALIDATE = 1

#
# This variable allows the administrator to define whether or not existing watermarks are
# automatically overwritten during certification. This setting can be either:
# 	-1 : The user can control overwriting watermarks via the toggle on the Advanced Options dialog.
# 	 0 : Overwriting of watermarks is turned OFF for all users
# 	 1 : Overwriting of watermarks is turned ON for all users
#
_CADCONFORM_WATERMARKS_OVERWRITE = -1

#
# Sets the cells to ignore during watermarking. This means that CADconform will not invalidate a
# watermark if a cell in this list is modified. This can be useful for EDMS applications that
# automatically update title block cells when a drawing is checked in.
#
_CADCONFORM_WATERMARK_CELL_EXCLUSIONS = ""

#
# Defines the symbology of the Watermark cross, as a MicroStation keyin.
#
_CADCONFORM_WATERMARK_CROSS = "lv=Default;co=red;wt=4;lc=0"

#
# Sets the levels to ignore during watermarking. This means that CADconform will not invalidate a
# watermark if an element on one of these levels is modified. Regular expressions (i.e. wildcards)
# are supported as follows:
# 	?		: Represents any single digit (0-9) or character (letter or symbol)
# 	*		: Represents any number of digits or characters
# 	|		: Represents one or zero digits or characters
# 	[ABC]		: Represents a subset of allowed characters (A, B or C)
# 	[A-Z]		: Represents a range of allowed characters (from A to Z)
# 	[^A-Z]		: Represents a range of disallowed characters (from A to Z)
# 	[ABC,DEF]	: Represents a subset of allowed strings (ABC or DEF)
# 	[[0-9],[DEF]]	: Represents one digit (from 0 to 9), or one character (D, E or F).
#
_CADCONFORM_WATERMARK_LEVEL_EXCLUSIONS = ""

#
# This sets the URL for CADconform information on the web.
#
_CADCONFORM_WEBSITE_URL = "http://www.altivasoft.com"

#
# Defines the Cell Name match score weighting. This variable controls the amount of weighting assigned
# to a feature with a matching cell name, when the match score is calculated in Conform. Each integer
# above zero defines the bonus score multiplier, starting with 1 as a double-score multiplier. If no
# special weighting is defined (i.e. set to '0' or the config variable is not defined), then this
# criteria is treated equally as any other match criteria, such as the text font or cell type. This
# can be useful in distributing the match score with more prominence given to certain attributes over
# other match criteria. The values can be defined as:
# 	0	: No special weighting
# 	1	: Double-weighted
# 	2	: Triple-weighted
# 	etc...
#
_CADCONFORM_WEIGHTING_CELL_NAME = 2
_CADCONFORM_WEIGHTING_LEVEL_NAME = 1
_CADCONFORM_WEIGHTING_COLOUR = 0
_CADCONFORM_WEIGHTING_WEIGHT = 0
_CADCONFORM_WEIGHTING_STYLE = 0
_CADCONFORM_WEIGHTING_TEXTSTYLE = 1
_CADCONFORM_WEIGHTING_TEXTHEIGHT = 2
_CADCONFORM_WEIGHTING_DIMENSIONSTYLE = 1


#
# Sets the types of wildcards supported for user-entered text matching. This includes Tag and 
# Enter Data-Field values in the Feature Table Editor, but does not include level name matching,
# nor text and dimension style ranges. The wildcard types are listed below:
#
# 	0	: No wildcards, all characters are treated literally
#	1	: Basic wildcards as per MS-DOS, such as * and ?
#	2	: As above, but also supports character ranges [A-Z], sets [ABC] and negation [^ABC]
#	3	: As above, but also supports subsets of strings, such as [ABC,DEF]
#	4	: Full PERL regular expression parsing. See PERL docs for instructions: 
#			http://perldoc.perl.org/perlre.html
#	5	: POSIX extended regular expressions. This is a subset of PERL regular expressions
#			often used in Unix command lines such as EGREP.
#
_CADCONFORM_WILDCARD_TYPE = 3


#
# This option is usually used in conjunction with the 'User Groups' option. It allows CADconform to
# retrieve the current user's full name from a domain controller, or from the current Windows login
# if the full name is not specified or discovered.
#
_CADCONFORM_WINDOWS_AUTHENTICATION = 0
